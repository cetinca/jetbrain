"""Pencils project
"""
import random
import re
from collections import deque
from enum import Enum


class Players(Enum):
    player1 = "John"
    player2 = "Jack"


player_deq = deque([Players.player1.value, Players.player2.value])


class MainProgram:
    ask_pencils = "How many pencils"
    ask_first_player = "Who will be the first ({n1}, {n2})"

    def __init__(self):
        self.pencils = None
        self.first = None
        self.player1 = Players.player1.value
        self.player2 = Players.player2.value

    @staticmethod
    def ask_for_pencils():
        pattern = r"^[0-9]+$"
        print("How many pencils would you like to use:")
        while True:
            user_input = input()
            is_number = re.match(pattern, user_input)
            if not is_number:
                print("The amount of pencils should be numeric")
            elif int(user_input) <= 0:
                print("The amount of pencils should be positive")
            else:
                return int(user_input)

    @staticmethod
    def ask_for_starter():
        print("Who will be the first (John, Jack):")
        while True:
            user_input = input()
            if user_input not in [Players.player1.value, Players.player2.value]:
                print("Choose between 'John' and 'Jack'")
            elif user_input == Players.player1.value:
                return Players.player1.value
            else:
                player_deq.rotate()
                return Players.player2.value

    @staticmethod
    def ask_for_number():
        while True:
            user_input = input()
            if user_input not in ["1", "2", "3"]:
                print("Possible values: '1', '2' or '3'")
            else:
                return int(user_input)

    @staticmethod
    def print_pencils(number):
        print("|" * number)

    def play(self):
        print(f"{player_deq[0]}'s turn:")
        while self.pencils > 0:
            if player_deq[0] == "Jack" and self.pencils in [1]:
                number = 1
                print(number)
            elif player_deq[0] == "Jack" and self.pencils in [2, 3, 4]:
                number = self.pencils - 1
                print(number)
            elif player_deq[0] == "Jack" and self.pencils % 4 == 1:
                number = random.randint(1, 3)
                print(number)
            elif player_deq[0] == "Jack" and self.pencils % 4 != 0:
                n = self.pencils // 4
                number = self.pencils - (n * 4 + 1)
                print(number)
            elif player_deq[0] == "Jack":
                n = self.pencils // 4
                number = self.pencils - ((n - 1) * 4 + 1)
                print(number)
            else:
                number = self.ask_for_number()
            if self.pencils - number == 0:
                print(f"{player_deq[1]} won!")
                break
            elif self.pencils - number < 0:
                print("too much pencils")
            else:
                self.pencils -= number
                self.print_pencils(self.pencils)
                player_deq.rotate()
                print(f"{player_deq[0]}'s turn:")

    def start(self):
        self.pencils = self.ask_for_pencils()
        self.first = self.ask_for_starter()
        self.print_pencils(self.pencils)
        self.play()


if __name__ == "__main__":
    MainProgram().start()
